{"version":3,"sources":["components/PrintButton/PrintButton.module.css","components/Canvas/Canvas.tsx","components/CanvasForm/CanvasForm.tsx","components/ImageSelectEditor/ImageSelectEditor.tsx","components/PrintButton/PrintButton.tsx","utils/hooks/useFonts.ts","utils/hooks/useProportionalSize.ts","components/App/App.tsx","index.tsx","components/CanvasForm/CanvasForm.module.css","components/App/App.module.css"],"names":["module","exports","Canvas","props","inputEl","useRef","Fragment","className","width","height","ref","fontFamily","fontSize","fontStyle","fillPatternImage","patternImage","text","fillPriority","draggable","onMouseDown","document","body","style","cursor","onMouseUp","onMouseEnter","onMouseLeave","CanvasForm","styles","group","span","Title","level","size","placeholder","onChange","target","value","gutter","defaultValue","select","setFontFamily","showSearch","Option","setFontSize","setFontStyle","ImageSelectEditor","Search","currentTarget","loading","imageLoadStatus","PrintButton","print","type","PrinterFilled","useFonts","useState","isFontsLoaded","setIsFontsLoaded","WebFont","load","google","families","classes","active","useProportionalSize","startWidth","startHeight","correct","useMemo","window","innerHeight","Header","Layout","Content","App","canvasRef","setText","patternImageUrl","setPatternImageUrl","canvasWidth","canvasHeight","useImage","image","status","header","title","wrapper","pixelRatio","column","spinning","tip","trigger","content","current","ReactDOM","render","getElementById"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,6B,kKCmDXC,MAtCf,SAAgBC,GACd,MAAMC,EAAUC,iBAAO,MAEvB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,QAAD,CACEC,UAAU,UACVC,MAAOL,EAAMK,MACbC,OAAQN,EAAMM,QAEd,kBAAC,QAAD,CAAOC,IAAKN,GACV,kBAAC,OAAD,CACEO,WAAYR,EAAMQ,WAClBC,SAAUT,EAAMS,SAChBC,UAAWV,EAAMU,UACjBC,iBAAkBX,EAAMY,aACxBC,KAAMb,EAAMa,KACZC,aAAa,UACbC,WAAS,EACTC,YAAa,KACXC,SAASC,KAAKC,MAAMC,OAAS,YAE/BC,UAAW,KACTJ,SAASC,KAAKC,MAAMC,OAAS,QAE/BE,aAAc,KACZL,SAASC,KAAKC,MAAMC,OAAS,QAE/BG,aAAc,KACZN,SAASC,KAAKC,MAAMC,OAAS,iB,uECsB5BI,MAjDf,SAAoBxB,GAClB,OACE,6BACE,kBAAC,IAAD,CAAKI,UAAWqB,IAAOC,MAAOC,KAAM,IAClC,kBAAC,IAAWC,MAAZ,CAAkBC,MAAO,GAAzB,cACA,kBAAC,IAAD,CACEC,KAAK,QACLC,YAAY,4BACZC,SAAU,EAAEC,YAAYjC,EAAMgC,SAASC,EAAOC,UAElD,kBAAC,IAAD,CAAK9B,UAAWqB,IAAOC,MAAOC,KAAM,IAClC,kBAAC,IAAWC,MAAZ,CAAkBC,MAAO,GAAzB,aACA,kBAAC,IAAD,CAAKM,OAAQ,CAAC,GAAI,KAChB,kBAAC,IAAD,CAAKR,KAAM,GACT,+BAAO,kBAAC,IAAWC,MAAZ,CAAkBC,MAAO,GAAzB,SACP,kBAAC,IAAD,CACEO,aAAa,SACbhC,UAAWqB,IAAOY,OAClBP,KAAK,QACLE,SAAUhC,EAAMsC,cAChBC,YAAU,GAEV,kBAAC,IAAOC,OAAR,CAAeN,MAAM,cAArB,cACA,kBAAC,IAAOM,OAAR,CAAeN,MAAM,UAArB,YAGJ,kBAAC,IAAD,CAAKP,KAAM,GACT,+BAAO,kBAAC,IAAWC,MAAZ,CAAkBC,MAAO,GAAzB,SACP,kBAAC,IAAD,CAAaO,aAAc,GAAIhC,UAAWqB,IAAOY,OAAQP,KAAK,QAAQE,SAAUhC,EAAMyC,eAExF,kBAAC,IAAD,CAAKd,KAAM,GACT,+BAAO,kBAAC,IAAWC,MAAZ,CAAkBC,MAAO,GAAzB,UACP,kBAAC,IAAD,CACEO,aAAa,SACbhC,UAAWqB,IAAOY,OAClBP,KAAK,QACLE,SAAUhC,EAAM0C,cAEhB,kBAAC,IAAOF,OAAR,CAAeN,MAAM,UAArB,UACA,kBAAC,IAAOM,OAAR,CAAeN,MAAM,QAArB,QACA,kBAAC,IAAOM,OAAR,CAAeN,MAAM,UAArB,gBClCCS,MAdf,SAA2B3C,GACzB,OACE,kBAAC,IAAD,CAAK2B,KAAM,IACT,kBAAC,IAAWC,MAAZ,CAAkBC,MAAO,GAAzB,kBACA,kBAAC,IAAMe,OAAP,CACEd,KAAK,QACLC,YAAY,YACZC,SAAU,EAAEa,mBAAmB7C,EAAMgC,SAASa,EAAcX,OAC5DY,QAAmC,YAA1B9C,EAAM+C,oB,mCCHRC,MARf,WACE,OACE,kBAAC,IAAD,CAAQ5C,UAAWqB,IAAOwB,MAAOC,KAAK,UAAUpB,KAAK,SACnD,kBAACqB,EAAA,EAAD,MADF,W,wECcWC,MAlBf,WAAqB,MAAD,EACwBC,oBAAS,GADjC,mBACXC,EADW,KACIC,EADJ,KAelB,OAZKD,GACHE,IAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,yBAA0B,uBAEvCC,SAAS,EACTC,OAAQ,KACNN,GAAiB,MAKhB,CAACD,ICPKQ,MATf,SAA6BC,EAAoBC,EAAqBC,GAAkB,MAAD,EAC7DC,kBAAQ,MAC9B7D,MAAO0D,IAAeC,EAAcC,GAAWE,OAAOC,aACtD9D,OAAQ0D,IAAgBA,EAAcC,GAAWE,OAAOC,eACtD,CAACL,EAAYC,EAAaC,IAE9B,MAAO,CAN8E,EAC9E5D,MAD8E,EACvEC,S,uBCST+D,EAAmBC,IAAnBD,OAAQE,EAAWD,IAAXC,QAyDAC,MAvDf,WACE,MAAMC,EAAYvE,iBAAO,MADZ,EAEWmD,mBAAS,IAFpB,mBAENxC,EAFM,KAEA6D,EAFA,OAGuBrB,mBAAS,UAHhC,mBAGN7C,EAHM,KAGM8B,EAHN,OAImBe,mBAAS,IAJ5B,mBAIN5C,EAJM,KAIIgC,EAJJ,OAKqBY,mBAAS,UAL9B,mBAKN3C,EALM,KAKKgC,EALL,OAMiCW,mBAAS,IAN1C,mBAMNsB,EANM,KAMWC,EANX,OAOWxB,IAAjBE,EAPM,sBAQuBQ,EAAoB,IAAK,IAAK,KARrD,mBAQNe,EARM,KAQOC,EARP,OASWC,IAASJ,GATpB,mBASNK,EATM,KASCC,EATD,KAWb,OACE,kBAAC,IAAD,KACE,kBAACZ,EAAD,CAAQjE,UAAWqB,IAAOyD,QACxB,kBAAC,IAAWtD,MAAZ,CAAkBxB,UAAWqB,IAAO0D,MAAOtD,MAAO,GAAlD,mBAEF,kBAAC0C,EAAD,KACE,yBAAKnE,UAAWqB,IAAO2D,SACrB,yBAAK7E,IAAKkE,GACR,kBAAC,EAAD,CACEY,WAAY,EACZhF,MAAOwE,EACPvE,OAAQwE,EACRjE,KAAMA,EACNL,WAAYA,EACZC,SAAUA,EACVC,UAAWA,EACXE,aAAcoE,KAGlB,kBAAC,IAAD,CAAK5E,UAAWqB,IAAO6D,QACrB,kBAAC,IAAD,CAAMC,UAAWjC,EAAekC,IAAI,aAAa1D,KAAK,SACpD,kBAAC,EAAD,CACEI,MAAOrB,EACPmB,SAAU0C,EACVpC,cAAeA,EACfG,YAAaA,EACbC,aAAcA,IAEhB,kBAAC,EAAD,CACEV,SAAU4C,EACV7B,gBAAiB4B,EAAkBM,EAAS,WAE9C,kBAAC,IAAD,CACEQ,QAAS,IAAM,2BAAG,kBAAC,EAAD,OAClBC,QAAS,IAAMjB,EAAUkB,gB,OCrDzCC,IAASC,OAAO,kBAAC,EAAD,MAAS5E,SAAS6E,eAAe,U,mBCLjDjG,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,OAAS,6B,mBCA7DD,EAAOC,QAAU,CAAC,OAAS,oBAAoB,MAAQ,mBAAmB,QAAU,qBAAqB,OAAS,uB","file":"static/js/main.cb1aa764.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"print\":\"PrintButton_print__2vsIj\"};","import React, {useRef} from 'react';\nimport {Stage, Layer, Text} from 'react-konva';\n\ninterface CanvasProps {\n  pixelRatio: number;\n  patternImage?: any;\n  width: number;\n  height: number;\n  fontFamily: string;\n  fontSize: number;\n  fontStyle: string;\n  text: string;\n}\n\nfunction Canvas(props: CanvasProps) {\n  const inputEl = useRef(null);\n\n  return (\n    <React.Fragment>\n      <Stage\n        className='preview'\n        width={props.width}\n        height={props.height}\n      >\n        <Layer ref={inputEl}>\n          <Text\n            fontFamily={props.fontFamily}\n            fontSize={props.fontSize}\n            fontStyle={props.fontStyle}\n            fillPatternImage={props.patternImage}\n            text={props.text}\n            fillPriority=\"pattern\"\n            draggable\n            onMouseDown={() => {\n              document.body.style.cursor = \"grabbing\";\n            }}\n            onMouseUp={() => {\n              document.body.style.cursor = \"grab\";\n            }}\n            onMouseEnter={() => {\n              document.body.style.cursor = \"grab\";\n            }}\n            onMouseLeave={() => {\n              document.body.style.cursor = \"default\";\n            }}\n          />\n        </Layer>\n      </Stage>\n    </React.Fragment>\n  );\n}\n\nexport default Canvas;\n","import React from 'react';\nimport {Input, Col, Typography, Row, Select, InputNumber} from 'antd';\nimport styles from \"../CanvasForm/CanvasForm.module.css\";\n\ninterface CanvasFormProps {\n  setFontFamily(value: any): void;\n\n  setFontSize(value: any): void;\n\n  setFontStyle(value: any): void;\n\n  onChange(value: any): void;\n\n  value: string;\n}\n\nfunction CanvasForm(props: CanvasFormProps) {\n  return (\n    <div>\n      <Col className={styles.group} span={24}>\n        <Typography.Title level={1}>Input text</Typography.Title>\n        <Input\n          size=\"large\"\n          placeholder=\"Text to display on canvas\"\n          onChange={({target}) => props.onChange(target.value)}/>\n      </Col>\n      <Col className={styles.group} span={24}>\n        <Typography.Title level={1}>Set style</Typography.Title>\n        <Row gutter={[16, 16]}>\n          <Col span={8}>\n            <label><Typography.Title level={4}>Font</Typography.Title></label>\n            <Select\n              defaultValue=\"roboto\"\n              className={styles.select}\n              size=\"large\"\n              onChange={props.setFontFamily}\n              showSearch\n            >\n              <Select.Option value=\"montserrat\">Montserrat</Select.Option>\n              <Select.Option value=\"roboto\">Roboto</Select.Option>\n            </Select>\n          </Col>\n          <Col span={8}>\n            <label><Typography.Title level={4}>Size</Typography.Title></label>\n            <InputNumber defaultValue={48} className={styles.select} size=\"large\" onChange={props.setFontSize}/>\n          </Col>\n          <Col span={8}>\n            <label><Typography.Title level={4}>Style</Typography.Title></label>\n            <Select\n              defaultValue=\"normal\"\n              className={styles.select}\n              size=\"large\"\n              onChange={props.setFontStyle}\n            >\n              <Select.Option value=\"normal\">Normal</Select.Option>\n              <Select.Option value=\"bold\">Bold</Select.Option>\n              <Select.Option value=\"italic\">Italic</Select.Option>\n            </Select>\n          </Col>\n        </Row>\n      </Col>\n    </div>\n  );\n}\n\nexport default CanvasForm;\n","import React from 'react';\nimport {Input, Typography, Col} from \"antd\";\n\ninterface ImageSelectEditorProps {\n  onChange(value: any): void\n  imageLoadStatus: string\n}\n\nfunction ImageSelectEditor(props: ImageSelectEditorProps) {\n  return (\n    <Col span={24}>\n      <Typography.Title level={1}>Choose pattern</Typography.Title>\n      <Input.Search\n        size=\"large\"\n        placeholder=\"Image URL\"\n        onChange={({currentTarget}) => props.onChange(currentTarget.value)}\n        loading={props.imageLoadStatus === 'loading'}\n      />\n    </Col>\n  );\n}\n\nexport default ImageSelectEditor;\n","import React from 'react';\nimport { Button } from 'antd';\nimport {PrinterFilled} from '@ant-design/icons';\nimport styles from './PrintButton.module.css';\n\nfunction PrintButton() {\n  return (\n    <Button className={styles.print} type=\"primary\" size=\"large\">\n      <PrinterFilled /> PRINT\n    </Button>\n  );\n}\n\nexport default PrintButton;\n","import {useState} from \"react\";\nimport WebFont from \"webfontloader\";\n\nfunction useFonts() {\n  const [isFontsLoaded, setIsFontsLoaded] = useState(false);\n\n  if (!isFontsLoaded) {\n    WebFont.load({\n      google: {\n        families: ['Montserrat:400,500,600', 'Roboto:400,700,900']\n      },\n      classes: false,\n      active: () => {\n        setIsFontsLoaded(true)\n      }\n    });\n  }\n\n  return [isFontsLoaded];\n}\n\nexport default useFonts;\n","import {useMemo} from \"react\";\n\nfunction useProportionalSize(startWidth: number, startHeight: number, correct: number) {\n  const {width, height} = useMemo(() => ({\n    width: startWidth / ((startHeight + correct) / window.innerHeight),\n    height: startHeight / ((startHeight + correct) / window.innerHeight)\n  }), [startWidth, startHeight, correct]);\n\n  return [width, height]\n}\n\nexport default useProportionalSize;\n","import React, {useState, useRef} from 'react';\nimport Canvas from '../Canvas/Canvas';\nimport CanvasForm from '../CanvasForm/CanvasForm';\nimport ImageSelectEditor from '../ImageSelectEditor/ImageSelectEditor';\nimport PrintButton from '../PrintButton/PrintButton';\nimport ReactToPrint from 'react-to-print';\nimport {Layout, Col, Spin, Typography} from 'antd';\nimport useImage from \"use-image\";\nimport useFonts from '../../utils/hooks/useFonts';\nimport useProportionalSize from \"../../utils/hooks/useProportionalSize\";\nimport styles from './App.module.css';\n\nconst {Header, Content} = Layout;\n\nfunction App() {\n  const canvasRef = useRef(null);\n  const [text, setText] = useState('');\n  const [fontFamily, setFontFamily] = useState('Roboto');\n  const [fontSize, setFontSize] = useState(48);\n  const [fontStyle, setFontStyle] = useState('normal');\n  const [patternImageUrl, setPatternImageUrl] = useState('');\n  const [isFontsLoaded] = useFonts();\n  const [canvasWidth, canvasHeight] = useProportionalSize(595, 842, 120);\n  const [image, status] = useImage(patternImageUrl);\n\n  return (\n    <Layout>\n      <Header className={styles.header}>\n        <Typography.Title className={styles.title} level={3}>Filled letters</Typography.Title>\n      </Header>\n      <Content>\n        <div className={styles.wrapper}>\n          <div ref={canvasRef}>\n            <Canvas\n              pixelRatio={2}\n              width={canvasWidth}\n              height={canvasHeight}\n              text={text}\n              fontFamily={fontFamily}\n              fontSize={fontSize}\n              fontStyle={fontStyle}\n              patternImage={image}\n            />\n          </div>\n          <Col className={styles.column}>\n            <Spin spinning={!isFontsLoaded} tip=\"Loading...\" size=\"large\">\n              <CanvasForm\n                value={text}\n                onChange={setText}\n                setFontFamily={setFontFamily}\n                setFontSize={setFontSize}\n                setFontStyle={setFontStyle}\n              />\n              <ImageSelectEditor\n                onChange={setPatternImageUrl}\n                imageLoadStatus={patternImageUrl ? status : 'loaded'}\n              />\n              <ReactToPrint\n                trigger={() => <a><PrintButton/></a>}\n                content={() => canvasRef.current}\n              />\n            </Spin>\n          </Col>\n        </div>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"group\":\"CanvasForm_group__2t1cM\",\"select\":\"CanvasForm_select__35u5a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__2MS2l\",\"title\":\"App_title__1YcTA\",\"wrapper\":\"App_wrapper__3ox-V\",\"column\":\"App_column__1jnVD\"};"],"sourceRoot":""}